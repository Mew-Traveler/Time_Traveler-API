#<Rack::MockResponse:0x00000002b4eab8 @original_headers={"Content-Type"=>"text/html", "Content-Length"=>"174530"}, @errors="2016-12-08 00:59:39 - NameError - uninitialized constant TimeTravelerAPI::ErrorRepresenter:\n\t/home/wtlin/Documents/Time_Traveler-API/controllers/rooms.rb:146:in `block in <class:TimeTravelerAPI>'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1611:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1611:in `block in compile!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:975:in `block (3 levels) in route!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:994:in `route_eval'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:975:in `block (2 levels) in route!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1015:in `block in process_route'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1013:in `catch'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1013:in `process_route'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:973:in `block in route!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:972:in `each'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:972:in `route!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1085:in `block in dispatch!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `block in invoke'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `catch'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `invoke'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1082:in `dispatch!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:907:in `block in call!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `block in invoke'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `catch'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1067:in `invoke'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:907:in `call!'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:895:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/xss_header.rb:18:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/path_traversal.rb:16:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/json_csrf.rb:18:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/base.rb:49:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/base.rb:49:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-protection-1.5.3/lib/rack/protection/frame_options.rb:31:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-1.6.5/lib/rack/nulllogger.rb:9:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-1.6.5/lib/rack/head.rb:13:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/show_exceptions.rb:25:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:182:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:2013:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1487:in `block in call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1787:in `synchronize'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/sinatra-1.4.7/lib/sinatra/base.rb:1487:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-1.6.5/lib/rack/builder.rb:153:in `call'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-test-0.6.3/lib/rack/mock_session.rb:30:in `request'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-test-0.6.3/lib/rack/test.rb:244:in `process_request'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-test-0.6.3/lib/rack/test.rb:67:in `post'\n\t/home/wtlin/.rvm/rubies/ruby-2.3.1/lib/ruby/2.3.0/forwardable.rb:189:in `post'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-rack-0.2.1/lib/ripl/rack.rb:24:in `block (3 levels) in rackit!'\n\t(ripl):41:in `<main>'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:107:in `eval'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:107:in `loop_eval'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-multi_line-0.3.1/lib/ripl/multi_line.rb:89:in `loop_eval'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:80:in `eval_input'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-multi_line-0.3.1/lib/ripl/multi_line/live_error.rb:74:in `eval_input'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:69:in `loop_once'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-multi_line-0.3.1/lib/ripl/multi_line.rb:36:in `block in loop_once'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-multi_line-0.3.1/lib/ripl/multi_line.rb:35:in `catch'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-multi_line-0.3.1/lib/ripl/multi_line.rb:35:in `loop_once'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:56:in `block in in_loop'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:56:in `catch'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:56:in `in_loop'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/shell.rb:35:in `loop'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/runner.rb:49:in `start'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/ripl-0.7.1/lib/ripl/runner.rb:31:in `run'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/gems/tux-0.3.0/bin/tux:7:in `<top (required)>'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/bin/tux:23:in `load'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/bin/tux:23:in `<main>'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/bin/ruby_executable_hooks:15:in `eval'\n\t/home/wtlin/.rvm/gems/ruby-2.3.1/bin/ruby_executable_hooks:15:in `<main>'\n", @body_string=nil, @status=500, @header={"Content-Type"=>"text/html", "Content-Length"=>"174530"}, @chunked=false, @writer=#<Proc:0x00000002b43f28@/home/wtlin/.rvm/gems/ruby-2.3.1/gems/rack-1.6.5/lib/rack/response.rb:30 (lambda)>, @block=nil, @length=174530, @body=["<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>NameError at &#x2F;api&#x2F;v0.1&#x2F;addHouse</title>\n\n  <script type=\"text/javascript\">\n  //<!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  </script>\n\n<style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n</head>\n<body>\n  <div id=\"wrap\">\n    <div id=\"header\">\n      <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n      <div id=\"summary\">\n        <h1><strong>NameError</strong> at <strong>&#x2F;api&#x2F;v0.1&#x2F;addHouse\n          </strong></h1>\n        <h2>uninitialized constant TimeTravelerAPI::ErrorRepresenter</h2>\n        <ul>\n          <li class=\"first\"><strong>file:</strong> <code>\n            rooms.rb</code></li>\n          <li><strong>location:</strong> <code>block in &lt;class:TimeTravelerAPI&gt;\n            </code></li>\n          <li class=\"last\"><strong>line:\n            </strong> 146</li>\n        </ul>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n    <div id=\"backtrace\" class='condensed'>\n      <h3>BACKTRACE</h3>\n      <p><a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a></p>\n      <p id=\"nav\"><strong>JUMP TO:</strong>\n         <a href=\"#get-info\">GET</a>\n         <a href=\"#post-info\">POST</a>\n         <a href=\"#cookie-info\">COOKIES</a>\n         <a href=\"#env-info\">ENV</a>\n      </p>\n      <div class=\"clear\"></div>\n\n      <ul id=\"backtrace-ul\">\n\n      \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;Documents&#x2F;Time_Traveler-API&#x2F;controllers&#x2F;rooms.rb</code> in\n                <code><strong>block in &lt;class:TimeTravelerAPI&gt;</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"139\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  post &quot;&#x2F;\#{API_VER}&#x2F;addHouse&#x2F;?&quot; do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    result = CreateHouse.call(request.body.read)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    if result.success?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      HouseRepresenter.new(result.value).to_json\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    else\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"146\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                <li class=\"context-line\" id=\"context-1\"><code>      ErrorRepresenter.new(result.value).to_status_response</code></li>\n              </ol>\n\n              \n              <ol start=\"147\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  get &quot;\#{API_VER}&#x2F;getHouses&#x2F;:location&#x2F;?&quot; do\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    \n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1604\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1611\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                <li class=\"context-line\" id=\"context-2\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1612\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in compile!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1604\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1611\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                <li class=\"context-line\" id=\"context-3\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1612\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (3 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"968\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"975\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                <li class=\"context-line\" id=\"context-4\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"976\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route_eval</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"987\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_eval(&amp;pass_block) if pass_block\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_missing\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run a route block and throw :halt with the result.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route_eval\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"994\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                <li class=\"context-line\" id=\"context-5\"><code>      throw :halt, yield</code></li>\n              </ol>\n\n              \n              <ol start=\"995\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # If the current request matches pattern and conditions, fill params\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # with keys and call the given block.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Revert params afterwards.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Returns pass block.\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (2 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"968\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"975\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                <li class=\"context-line\" id=\"context-6\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"976\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1008\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      catch(:pass) do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1015\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                <li class=\"context-line\" id=\"context-7\"><code>        block ? block[self, values] : yield(self, values)</code></li>\n              </ol>\n\n              \n              <ol start=\"1016\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # No matching route was found or all routes passed. The default\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # implementation is to forward the request downstream when running\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1013\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                <li class=\"context-line\" id=\"context-8\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1013\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                <li class=\"context-line\" id=\"context-9\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"966\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"973\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                <li class=\"context-line\" id=\"context-10\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>\n              </ol>\n\n              \n              <ol start=\"974\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>each</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"965\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"972\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                <li class=\"context-line\" id=\"context-11\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"973\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"965\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"972\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                <li class=\"context-line\" id=\"context-12\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"973\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1078\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      invoke do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        filter! :before\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1085\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                <li class=\"context-line\" id=\"context-13\"><code>        route!</code></li>\n              </ol>\n\n              \n              <ol start=\"1086\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      begin\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      rescue ::Exception =&gt; boom\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                <li class=\"context-line\" id=\"context-14\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                <li class=\"context-line\" id=\"context-15\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                <li class=\"context-line\" id=\"context-16\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1075\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                \n                <li class=\"pre-context-line\"><code>        body res\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      nil # avoid double setting the same response tuple twice\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1082\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                <li class=\"context-line\" id=\"context-17\"><code>      invoke do</code></li>\n              </ol>\n\n              \n              <ol start=\"1083\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                \n                <li class=\"post-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :before\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        route!\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"900\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"907\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                <li class=\"context-line\" id=\"context-18\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"908\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                <li class=\"context-line\" id=\"context-19\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                <li class=\"context-line\" id=\"context-20\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1060\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1067\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                <li class=\"context-line\" id=\"context-21\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1068\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"900\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"907\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                <li class=\"context-line\" id=\"context-22\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"908\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"888\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template_cache = Tilt::Cache.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      yield self if block_given?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Rack call interface.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"895\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                <li class=\"context-line\" id=\"context-23\"><code>      dup.call!(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"896\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def call!(env) # :nodoc:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @env      = env\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Options:\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class XSSHeader &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                <li class=\"context-line\" id=\"context-24\"><code>        status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=\#{options[:xss_mode]}&quot; if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class PathTraversal &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"16\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                <li class=\"context-line\" id=\"context-25\"><code>        app.call env</code></li>\n              </ol>\n\n              \n              <ol start=\"17\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                \n                <li class=\"post-context-line\"><code>      ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[&quot;PATH_INFO&quot;] = path_was\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def cleanup(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to?(:encoding)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # Ruby 1.9+ M17N\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                \n                <li class=\"pre-context-line\"><code>    # Array prototype has been patched to track data. Checks the referrer\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # even on GET requests if the content type is JSON.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class JsonCsrf &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      alias react deny\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        request               = Request.new(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                <li class=\"context-line\" id=\"context-26\"><code>        status, headers, body = app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if has_vector? request, headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          warn env, &quot;attack prevented by \#{self.class}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          react(env) or [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                <li class=\"context-line\" id=\"context-27\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                <li class=\"context-line\" id=\"context-28\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options.to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"31\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                <li class=\"context-line\" id=\"context-29\"><code>        status, headers, body        = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"32\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-1.6.5&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"2\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                \n                <li class=\"pre-context-line\"><code>  class NullLogger\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      env[&#x27;rack.logger&#x27;] = self\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"9\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                <li class=\"context-line\" id=\"context-30\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"10\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def info(progname = nil, &amp;block); end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def debug(progname = nil, &amp;block); end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def warn(progname = nil, &amp;block); end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def error(progname = nil, &amp;block); end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def fatal(progname = nil, &amp;block); end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-1.6.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"6\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                \n                <li class=\"pre-context-line\"><code>  # Rack::Head returns an empty body for all HEAD requests. It leaves\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # all other requests unchanged.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"13\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                <li class=\"context-line\" id=\"context-31\"><code>    status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"14\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    if env[REQUEST_METHOD] == HEAD\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status, headers, Rack::BodyProxy.new([]) do\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          body.close if body.respond_to? :close\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      ]\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"18\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app      = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template = ERB.new(TEMPLATE)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"25\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                <li class=\"context-line\" id=\"context-32\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"26\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                \n                <li class=\"post-context-line\"><code>    rescue Exception =&gt; e\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if prefers_plain_text?(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        content_type = &quot;text&#x2F;plain&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        exception = dump_exception(e)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      else\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"175\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                \n                <li class=\"pre-context-line\"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # still be able to run.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  class ExtendedRack &lt; Struct.new(:app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"182\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                <li class=\"context-line\" id=\"context-33\"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>\n              </ol>\n\n              \n              <ol start=\"183\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                \n                <li class=\"post-context-line\"><code>      return result unless callback and async?(*result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      after_response { callback.call result }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      setup_close(env, *result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      throw :async\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"2006\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def helpers\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @instance\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"2013\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                <li class=\"context-line\" id=\"context-34\"><code>      @stack.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"2014\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def inspect\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      &quot;#&lt;\#{@instance.class} app_file=\#{settings.app_file.inspect}&gt;&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1480\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1487\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                <li class=\"context-line\" id=\"context-35\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1488\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>synchronize</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1780\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @@mutex = Mutex.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        if lock?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          @@mutex.synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        else\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1787\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                <li class=\"context-line\" id=\"context-36\"><code>          yield</code></li>\n              </ol>\n\n              \n              <ol start=\"1788\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # used for deprecation warnings\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def warn(message)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        super message + &quot;\\n\\tfrom \#{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;sinatra-1.4.7&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1480\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1487\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                <li class=\"context-line\" id=\"context-37\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1488\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-1.6.5&#x2F;lib&#x2F;rack&#x2F;builder.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"146\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                \n                <li class=\"pre-context-line\"><code>      fail &quot;missing run or map statement&quot; unless app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      app = @use.reverse.inject(app) { |a,e| e[a] }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @warmup.call(app) if @warmup\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"153\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                <li class=\"context-line\" id=\"context-38\"><code>      to_app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"154\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def generate_map(default_app, mapping)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      mapped = default_app ? {&#x27;&#x2F;&#x27; =&gt; default_app} : {}\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      mapping.each { |r,b| mapped[r] = self.class.new(default_app, &amp;b).to_app }\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;mock_session.rb</code> in\n                <code><strong>request</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"23\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                \n                <li class=\"pre-context-line\"><code>    def set_cookie(cookie, uri = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      cookie_jar.merge(cookie, uri)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def request(uri, env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @last_request = Rack::Request.new(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"30\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                <li class=\"context-line\" id=\"context-39\"><code>      status, headers, body = @app.call(@last_request.env)</code></li>\n              </ol>\n\n              \n              <ol start=\"31\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      body.close if body.respond_to?(:close)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      cookie_jar.merge(last_response.headers[&quot;Set-Cookie&quot;], uri)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @after_request.each { |hook| hook.call }\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in\n                <code><strong>process_request</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"237\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                \n                <li class=\"pre-context-line\"><code>        Rack::MockRequest.env_for(uri.to_s, env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def process_request(uri, env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        uri = URI.parse(uri)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        uri.host ||= @default_host\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"244\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                <li class=\"context-line\" id=\"context-40\"><code>        @rack_mock_session.request(uri, env)</code></li>\n              </ol>\n\n              \n              <ol start=\"245\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if retry_with_digest_auth?(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          auth_env = env.merge({\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            &quot;HTTP_AUTHORIZATION&quot;          =&gt; digest_auth_header,\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            &quot;rack-test.digest_auth_retry&quot; =&gt; true\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          })\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          auth_env.delete(&#x27;rack.request&#x27;)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in\n                <code><strong>post</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"60\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      # Issue a POST request for the given URI. See #get\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      # Example:\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      #   post &quot;&#x2F;signup&quot;, &quot;name&quot; =&gt; &quot;Bryan&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def post(uri, params = {}, env = {}, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env = env_for(uri, env.merge(:method =&gt; &quot;POST&quot;, :params =&gt; params))\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"67\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                <li class=\"context-line\" id=\"context-41\"><code>        process_request(uri, env, &amp;block)</code></li>\n              </ol>\n\n              \n              <ol start=\"68\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Issue a PUT request for the given URI. See #get\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      #\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Example:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      #   put &quot;&#x2F;&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def put(uri, params = {}, env = {}, &amp;block)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;rubies&#x2F;ruby-2.3.1&#x2F;lib&#x2F;ruby&#x2F;2.3.0&#x2F;forwardable.rb</code> in\n                <code><strong>post</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"182\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                \n                <li class=\"pre-context-line\"><code>    if method_defined?(accessor) || private_method_defined?(accessor)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      accessor = &quot;\#{accessor}()&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    line_no = __LINE__; str = %{\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def \#{ali}(*args, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        begin\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"189\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                <li class=\"context-line\" id=\"context-42\"><code>          \#{accessor}.__send__(:\#{method}, *args, &amp;block)</code></li>\n              </ol>\n\n              \n              <ol start=\"190\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                \n                <li class=\"post-context-line\"><code>        rescue ::Exception\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          $@.delete_if{|s| ::Forwardable::FILE_REGEXP =~ s} unless ::Forwardable::debug\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          ::Kernel::raise\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # If it&#x27;s not a class or module, it&#x27;s an instance\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-rack-0.2.1&#x2F;lib&#x2F;ripl&#x2F;rack.rb</code> in\n                <code><strong>block (3 levels) in rackit!</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"17\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                \n                <li class=\"pre-context-line\"><code>    def rack\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Rack::App.instance\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def rackit!\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Rack::Commands.module_eval do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        rack.actions.each do |meth|\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"24\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                <li class=\"context-line\" id=\"context-43\"><code>          define_method(meth) {|*args| rack.send(meth, *args) }</code></li>\n              </ol>\n\n              \n              <ol start=\"25\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  class App\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    include Rack::Test::Methods\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>eval</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"100\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                \n                <li class=\"pre-context-line\"><code>    rescue StandardError, SyntaxError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      $stderr.puts &quot;ripl: \#{MESSAGES[&#x27;prompt&#x27;]}:&quot;, format_error($!)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      OPTIONS[:prompt]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Evals user input using @binding, @name and @line\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_eval(str)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"107\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                <li class=\"context-line\" id=\"context-45\"><code>      eval(str, @binding, &quot;(\#{@name})&quot;, @line)</code></li>\n              </ol>\n\n              \n              <ol start=\"108\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Prints error formatted by #format_error to STDERR. Could be extended to\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # handle certain exceptions.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # @param [Exception]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def print_eval_error(err)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      $stderr.puts format_error(err)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>loop_eval</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"100\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                \n                <li class=\"pre-context-line\"><code>    rescue StandardError, SyntaxError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      $stderr.puts &quot;ripl: \#{MESSAGES[&#x27;prompt&#x27;]}:&quot;, format_error($!)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      OPTIONS[:prompt]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Evals user input using @binding, @name and @line\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_eval(str)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"107\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                <li class=\"context-line\" id=\"context-46\"><code>      eval(str, @binding, &quot;(\#{@name})&quot;, @line)</code></li>\n              </ol>\n\n              \n              <ol start=\"108\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Prints error formatted by #format_error to STDERR. Could be extended to\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # handle certain exceptions.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # @param [Exception]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def print_eval_error(err)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      $stderr.puts format_error(err)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-multi_line-0.3.1&#x2F;lib&#x2F;ripl&#x2F;multi_line.rb</code> in\n                <code><strong>loop_eval</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"82\"\n                  class=\"pre-context\" id=\"pre-47\"\n                  onclick=\"toggle(47);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  \n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_eval(input)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      eval_string = if @buffer then @buffer*&quot;\\n&quot; + &quot;\\n&quot; + input else input end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if type = multiline?(eval_string)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        handle_multiline(type)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"89\" class=\"context\" id=\"47\"\n                  onclick=\"toggle(47);\">\n                <li class=\"context-line\" id=\"context-47\"><code>      super eval_string</code></li>\n              </ol>\n\n              \n              <ol start=\"90\" class=\"post-context\"\n                  id=\"post-47\" onclick=\"toggle(47);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # remove last line from buffer\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # MAYBE: terminal rewriting\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def handle_interrupt\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if @buffer\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        @buffer.pop; @buffer_info.pop; history.pop\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>eval_input</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"73\"\n                  class=\"pre-context\" id=\"pre-48\"\n                  onclick=\"toggle(48);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Handles interrupt (Control-C) by printing a newline\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def handle_interrupt() puts end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Sets @result to result of evaling input and print unexpected errors\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def eval_input(input)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"80\" class=\"context\" id=\"48\"\n                  onclick=\"toggle(48);\">\n                <li class=\"context-line\" id=\"context-48\"><code>      @result = loop_eval(input)</code></li>\n              </ol>\n\n              \n              <ol start=\"81\" class=\"post-context\"\n                  id=\"post-48\" onclick=\"toggle(48);\">\n                \n                <li class=\"post-context-line\"><code>      eval(&quot;_ = Ripl.shell.result&quot;, @binding)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue Exception =&gt; e\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @error_raised = true\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      print_eval_error(e)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @line += 1\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-multi_line-0.3.1&#x2F;lib&#x2F;ripl&#x2F;multi_line&#x2F;live_error.rb</code> in\n                <code><strong>eval_input</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"67\"\n                  class=\"pre-context\" id=\"pre-49\"\n                  onclick=\"toggle(49);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def eval_input(input)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if input =~ &#x2F;;\\s*\\Z&#x2F; # force multi line with ;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        handle_multiline(:forced)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      elsif input =~ &#x2F;^=begin(\\s.*)?$&#x2F; &amp;&amp; !@buffer\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        @ignore_mode = true # MAYBE: change prompt\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      elsif !@ignore_mode\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"74\" class=\"context\" id=\"49\"\n                  onclick=\"toggle(49);\">\n                <li class=\"context-line\" id=\"context-49\"><code>        super</code></li>\n              </ol>\n\n              \n              <ol start=\"75\" class=\"post-context\"\n                  id=\"post-49\" onclick=\"toggle(49);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def print_result(result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if @ignore_mode &amp;&amp; @input == &#x27;=end&#x27;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        @ignore_mode = false\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif !@ignore_mode\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>loop_once</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"62\"\n                  class=\"pre-context\" id=\"pre-50\"\n                  onclick=\"toggle(50);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Runs through one loop iteration: gets input, evals and prints result\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_once\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @error_raised = nil\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @input = get_input\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      throw(:ripl_exit) if EXIT_WORDS.include?(@input)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"69\" class=\"context\" id=\"50\"\n                  onclick=\"toggle(50);\">\n                <li class=\"context-line\" id=\"context-50\"><code>      eval_input(@input)</code></li>\n              </ol>\n\n              \n              <ol start=\"70\" class=\"post-context\"\n                  id=\"post-50\" onclick=\"toggle(50);\">\n                \n                <li class=\"post-context-line\"><code>      print_result(@result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue Interrupt\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      handle_interrupt\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Handles interrupt (Control-C) by printing a newline\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def handle_interrupt() puts end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-multi_line-0.3.1&#x2F;lib&#x2F;ripl&#x2F;multi_line.rb</code> in\n                <code><strong>block in loop_once</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"29\"\n                  class=\"pre-context\" id=\"pre-51\"\n                  onclick=\"toggle(51);\">\n                \n                <li class=\"pre-context-line\"><code>    rescue StandardError, SyntaxError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      warn &quot;ripl: Error while creating prompt:\\n&quot;+ format_error($!)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Shell::OPTIONS[:prompt]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_once\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      catch(:multiline) do\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"36\" class=\"context\" id=\"51\"\n                  onclick=\"toggle(51);\">\n                <li class=\"context-line\" id=\"context-51\"><code>        super</code></li>\n              </ol>\n\n              \n              <ol start=\"37\" class=\"post-context\"\n                  id=\"post-51\" onclick=\"toggle(51);\">\n                \n                <li class=\"post-context-line\"><code>        if config[:multi_line_history] &amp;&amp; @buffer &amp;&amp; @input\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          (@buffer.size + 1).times{ history.pop }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          if config[:multi_line_history] == :compact\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            history_entry = &#x27;&#x27;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            @buffer.zip(@buffer_info){ |str, type|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>              history_entry &lt;&lt; str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-multi_line-0.3.1&#x2F;lib&#x2F;ripl&#x2F;multi_line.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"28\"\n                  class=\"pre-context\" id=\"pre-52\"\n                  onclick=\"toggle(52);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    rescue StandardError, SyntaxError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      warn &quot;ripl: Error while creating prompt:\\n&quot;+ format_error($!)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Shell::OPTIONS[:prompt]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_once\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"35\" class=\"context\" id=\"52\"\n                  onclick=\"toggle(52);\">\n                <li class=\"context-line\" id=\"context-52\"><code>      catch(:multiline) do</code></li>\n              </ol>\n\n              \n              <ol start=\"36\" class=\"post-context\"\n                  id=\"post-52\" onclick=\"toggle(52);\">\n                \n                <li class=\"post-context-line\"><code>        super\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if config[:multi_line_history] &amp;&amp; @buffer &amp;&amp; @input\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          (@buffer.size + 1).times{ history.pop }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          if config[:multi_line_history] == :compact\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            history_entry = &#x27;&#x27;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            @buffer.zip(@buffer_info){ |str, type|\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-multi_line-0.3.1&#x2F;lib&#x2F;ripl&#x2F;multi_line.rb</code> in\n                <code><strong>loop_once</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"28\"\n                  class=\"pre-context\" id=\"pre-53\"\n                  onclick=\"toggle(53);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    rescue StandardError, SyntaxError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      warn &quot;ripl: Error while creating prompt:\\n&quot;+ format_error($!)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Shell::OPTIONS[:prompt]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def loop_once\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"35\" class=\"context\" id=\"53\"\n                  onclick=\"toggle(53);\">\n                <li class=\"context-line\" id=\"context-53\"><code>      catch(:multiline) do</code></li>\n              </ol>\n\n              \n              <ol start=\"36\" class=\"post-context\"\n                  id=\"post-53\" onclick=\"toggle(53);\">\n                \n                <li class=\"post-context-line\"><code>        super\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if config[:multi_line_history] &amp;&amp; @buffer &amp;&amp; @input\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          (@buffer.size + 1).times{ history.pop }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          if config[:multi_line_history] == :compact\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            history_entry = &#x27;&#x27;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            @buffer.zip(@buffer_info){ |str, type|\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>block in in_loop</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"49\"\n                  class=\"pre-context\" id=\"pre-54\"\n                  onclick=\"toggle(54);\">\n                \n                <li class=\"pre-context-line\"><code>    # initialize plugins and their instance variables.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def before_loop\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Runner.load_rc(@irbrc) if @irbrc\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      add_commands(eval(&quot;self&quot;, @binding))\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def in_loop\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"56\" class=\"context\" id=\"54\"\n                  onclick=\"toggle(54);\">\n                <li class=\"context-line\" id=\"context-54\"><code>      catch(:ripl_exit) { loop_once while(true) }</code></li>\n              </ol>\n\n              \n              <ol start=\"57\" class=\"post-context\"\n                  id=\"post-54\" onclick=\"toggle(54);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def add_commands(obj)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      ![Symbol, Fixnum].include?(obj.class) ? obj.extend(Ripl::Commands) :\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        obj.class.send(:include, Ripl::Commands)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"49\"\n                  class=\"pre-context\" id=\"pre-55\"\n                  onclick=\"toggle(55);\">\n                \n                <li class=\"pre-context-line\"><code>    # initialize plugins and their instance variables.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def before_loop\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Runner.load_rc(@irbrc) if @irbrc\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      add_commands(eval(&quot;self&quot;, @binding))\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def in_loop\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"56\" class=\"context\" id=\"55\"\n                  onclick=\"toggle(55);\">\n                <li class=\"context-line\" id=\"context-55\"><code>      catch(:ripl_exit) { loop_once while(true) }</code></li>\n              </ol>\n\n              \n              <ol start=\"57\" class=\"post-context\"\n                  id=\"post-55\" onclick=\"toggle(55);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def add_commands(obj)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      ![Symbol, Fixnum].include?(obj.class) ? obj.extend(Ripl::Commands) :\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        obj.class.send(:include, Ripl::Commands)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>in_loop</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"49\"\n                  class=\"pre-context\" id=\"pre-56\"\n                  onclick=\"toggle(56);\">\n                \n                <li class=\"pre-context-line\"><code>    # initialize plugins and their instance variables.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def before_loop\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Ripl::Runner.load_rc(@irbrc) if @irbrc\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      add_commands(eval(&quot;self&quot;, @binding))\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def in_loop\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"56\" class=\"context\" id=\"56\"\n                  onclick=\"toggle(56);\">\n                <li class=\"context-line\" id=\"context-56\"><code>      catch(:ripl_exit) { loop_once while(true) }</code></li>\n              </ol>\n\n              \n              <ol start=\"57\" class=\"post-context\"\n                  id=\"post-56\" onclick=\"toggle(56);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def add_commands(obj)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      ![Symbol, Fixnum].include?(obj.class) ? obj.extend(Ripl::Commands) :\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        obj.class.send(:include, Ripl::Commands)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;shell.rb</code> in\n                <code><strong>loop</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"28\"\n                  class=\"pre-context\" id=\"pre-57\"\n                  onclick=\"toggle(57);\">\n                \n                <li class=\"pre-context-line\"><code>    @prompt, @result_prompt = options.values_at(:prompt, :result_prompt)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    @irbrc, @line = options[:irbrc], 1\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # Loops shell until user exits\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def loop\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    before_loop\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"35\" class=\"context\" id=\"57\"\n                  onclick=\"toggle(57);\">\n                <li class=\"context-line\" id=\"context-57\"><code>    in_loop</code></li>\n              </ol>\n\n              \n              <ol start=\"36\" class=\"post-context\"\n                  id=\"post-57\" onclick=\"toggle(57);\">\n                \n                <li class=\"post-context-line\"><code>    after_loop\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  def config() Ripl.config end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  module API\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    MESSAGES = {\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;runner.rb</code> in\n                <code><strong>start</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-58\"\n                  onclick=\"toggle(58);\">\n                \n                <li class=\"pre-context-line\"><code>  def self.start(options={})\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    @argv = options.delete(:argv) || ARGV\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    argv = @argv.dup\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    load_rc(Ripl.config[:riplrc]) unless argv.delete(&#x27;-F&#x27;) || options[:riplrc] == false\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    argv.each {|e| e[&#x2F;^-&#x2F;] ? break : argv.shift } if $0[&#x2F;\#{app}-\\w+$&#x2F;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    parse_options(argv) if $0[&#x2F;\#{app}$|\#{app}-\\w+$&#x2F;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    warn &quot;\#{app}: \#{MESSAGES[&#x27;start&#x27;]}: \#{argv.inspect}&quot; if !argv.empty?\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"58\"\n                  onclick=\"toggle(58);\">\n                <li class=\"context-line\" id=\"context-58\"><code>    Ripl.shell(options).loop</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-58\" onclick=\"toggle(58);\">\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  def self.load_rc(file)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    load file if File.exists?(File.expand_path(file))\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  rescue StandardError, SyntaxError, LoadError\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    $stderr.puts &quot;\#{app}: \#{MESSAGES[&#x27;load_rc&#x27;] % file}:&quot;, format_error($!)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;ripl-0.7.1&#x2F;lib&#x2F;ripl&#x2F;runner.rb</code> in\n                <code><strong>run</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-59\"\n                  onclick=\"toggle(59);\">\n                \n                <li class=\"pre-context-line\"><code>    options.each {|e|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      OPTIONS[e[0][&#x2F;-\\w+&#x2F;]] = e\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      OPTIONS_ARR &lt;&lt; e[0][&#x2F;-\\w+&#x2F;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def self.run(argv=ARGV)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"31\" class=\"context\" id=\"59\"\n                  onclick=\"toggle(59);\">\n                <li class=\"context-line\" id=\"context-59\"><code>    argv[0].to_s[&#x2F;^[^-]&#x2F;] ? run_command(argv) : start(:argv =&gt; argv)</code></li>\n              </ol>\n\n              \n              <ol start=\"32\" class=\"post-context\"\n                  id=\"post-59\" onclick=\"toggle(59);\">\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  def self.run_command(argv)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    exec &quot;\#{app}-\#{cmd = argv.shift}&quot;, *argv\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  rescue SystemCallError\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    raise unless $!.message =~ &#x2F;No such file or directory.*\#{app}-(\\w+)&#x2F; ||\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      $!.message.include?(&quot;Invalid argument - execvp(2) failed&quot;)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;gems&#x2F;tux-0.3.0&#x2F;bin&#x2F;tux</code> in\n                <code><strong>&lt;top (required)&gt;</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"1\"\n                  class=\"pre-context\" id=\"pre-60\"\n                  onclick=\"toggle(60);\">\n                \n                <li class=\"pre-context-line\"><code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>require &#x27;tux&#x27;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>require &#x27;tux&#x2F;rack&#x27;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>require &#x27;tux&#x2F;runner&#x27;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>require &#x27;ripl&#x2F;multi_line&#x27; unless ENV[&#x27;NO_RIPL_MULTI_LINE&#x27;]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"7\" class=\"context\" id=\"60\"\n                  onclick=\"toggle(60);\">\n                <li class=\"context-line\" id=\"context-60\"><code>Tux::Runner.run</code></li>\n              </ol>\n\n              \n              <ol start=\"8\" class=\"post-context\"\n                  id=\"post-60\" onclick=\"toggle(60);\">\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;bin&#x2F;tux</code> in\n                <code><strong>load</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-61\"\n                  onclick=\"toggle(61);\">\n                \n                <li class=\"pre-context-line\"><code>  if str =~ &#x2F;\\A_(.*)_\\z&#x2F; and Gem::Version.correct?($1) then\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    version = $1\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    ARGV.shift\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>gem &#x27;tux&#x27;, version\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"23\" class=\"context\" id=\"61\"\n                  onclick=\"toggle(61);\">\n                <li class=\"context-line\" id=\"context-61\"><code>load Gem.bin_path(&#x27;tux&#x27;, &#x27;tux&#x27;, version)</code></li>\n              </ol>\n\n              \n              <ol start=\"24\" class=\"post-context\"\n                  id=\"post-61\" onclick=\"toggle(61);\">\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;bin&#x2F;tux</code> in\n                <code><strong>&lt;main&gt;</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-62\"\n                  onclick=\"toggle(62);\">\n                \n                <li class=\"pre-context-line\"><code>  if str =~ &#x2F;\\A_(.*)_\\z&#x2F; and Gem::Version.correct?($1) then\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    version = $1\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    ARGV.shift\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>gem &#x27;tux&#x27;, version\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"23\" class=\"context\" id=\"62\"\n                  onclick=\"toggle(62);\">\n                <li class=\"context-line\" id=\"context-62\"><code>load Gem.bin_path(&#x27;tux&#x27;, &#x27;tux&#x27;, version)</code></li>\n              </ol>\n\n              \n              <ol start=\"24\" class=\"post-context\"\n                  id=\"post-62\" onclick=\"toggle(62);\">\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;bin&#x2F;ruby_executable_hooks</code> in\n                <code><strong>eval</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-63\"\n                  onclick=\"toggle(63);\">\n                \n                <li class=\"pre-context-line\"><code>begin\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  require &#x27;executable-hooks&#x2F;hooks&#x27;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  Gem::ExecutableHooks.run($0)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>rescue LoadError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  warn &quot;unable to load executable-hooks&#x2F;hooks&quot; if ENV.key?(&#x27;ExecutableHooks_DEBUG&#x27;)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"15\" class=\"context\" id=\"63\"\n                  onclick=\"toggle(63);\">\n                <li class=\"context-line\" id=\"context-63\"><code>eval File.read($0), binding, $0</code></li>\n              </ol>\n\n              \n              <ol start=\"16\" class=\"post-context\"\n                  id=\"post-63\" onclick=\"toggle(63);\">\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;home&#x2F;wtlin&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.3.1&#x2F;bin&#x2F;ruby_executable_hooks</code> in\n                <code><strong>&lt;main&gt;</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-64\"\n                  onclick=\"toggle(64);\">\n                \n                <li class=\"pre-context-line\"><code>begin\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  require &#x27;executable-hooks&#x2F;hooks&#x27;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  Gem::ExecutableHooks.run($0)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>rescue LoadError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  warn &quot;unable to load executable-hooks&#x2F;hooks&quot; if ENV.key?(&#x27;ExecutableHooks_DEBUG&#x27;)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"15\" class=\"context\" id=\"64\"\n                  onclick=\"toggle(64);\">\n                <li class=\"context-line\" id=\"context-64\"><code>eval File.read($0), binding, $0</code></li>\n              </ol>\n\n              \n              <ol start=\"16\" class=\"post-context\"\n                  id=\"post-64\" onclick=\"toggle(64);\">\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n\n      </ul>\n    </div> <!-- /BACKTRACE -->\n\n    <div id=\"get\">\n      <h3 id=\"get-info\">GET</h3>\n      \n        <p class=\"no-data\">No GET data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /GET -->\n\n    <div id=\"post\">\n      <h3 id=\"post-info\">POST</h3>\n      \n        <table class=\"req\">\n          <tr>\n            <th>Variable</th>\n            <th>Value</th>\n          </tr>\n          \n          <tr>\n            <td>address</td>\n            <td class=\"code\"><div>&quot;new_address&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>airbnb_link</td>\n            <td class=\"code\"><div>&quot;new_airbnb_link&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>bed</td>\n            <td class=\"code\"><div>&quot;new_bed&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>id</td>\n            <td class=\"code\"><div>&quot;new_roomId&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>name</td>\n            <td class=\"code\"><div>&quot;new_roomName&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>price</td>\n            <td class=\"code\"><div>&quot;new_roomPrice&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>roomImg</td>\n            <td class=\"code\"><div>&quot;new_roomImg&quot;</div></td>\n          </tr>\n          \n          <tr>\n            <td>roomRank</td>\n            <td class=\"code\"><div>&quot;new_roomRank&quot;</div></td>\n          </tr>\n          \n        </table>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /POST -->\n\n    <div id=\"cookies\">\n      <h3 id=\"cookie-info\">COOKIES</h3>\n      \n        <p class=\"no-data\">No cookie data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /COOKIES -->\n\n    <div id=\"rack\">\n      <h3 id=\"env-info\">Rack ENV</h3>\n      <table class=\"req\">\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n         \n         <tr>\n           <td>CONTENT_LENGTH</td>\n           <td class=\"code\"><div>153</div></td>\n         </tr>\n         \n         <tr>\n           <td>CONTENT_TYPE</td>\n           <td class=\"code\"><div>application&#x2F;x-www-form-urlencoded</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTPS</td>\n           <td class=\"code\"><div>off</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_COOKIE</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_HOST</td>\n           <td class=\"code\"><div>example.org</div></td>\n         </tr>\n         \n         <tr>\n           <td>PATH_INFO</td>\n           <td class=\"code\"><div>&#x2F;api&#x2F;v0.1&#x2F;addHouse</div></td>\n         </tr>\n         \n         <tr>\n           <td>QUERY_STRING</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>REMOTE_ADDR</td>\n           <td class=\"code\"><div>127.0.0.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_METHOD</td>\n           <td class=\"code\"><div>POST</div></td>\n         </tr>\n         \n         <tr>\n           <td>SCRIPT_NAME</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_NAME</td>\n           <td class=\"code\"><div>example.org</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_PORT</td>\n           <td class=\"code\"><div>80</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.errors</td>\n           <td class=\"code\"><div>#&lt;Object:0x00000001bc3508&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x00000003473cb0&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.logger</td>\n           <td class=\"code\"><div>#&lt;Rack::NullLogger:0x00000002d75698 @app=#&lt;Rack::Protection::FrameOptions:0x00000002d75788 @app=#&lt;Rack::Protection::HttpOrigin:0x00000002d75828 @app=#&lt;Rack::Protection::IPSpoofing:0x00000002d758c8 @app=#&lt;Rack::Protection::JsonCsrf:0x00000002d75968 @app=#&lt;Rack::Protection::PathTraversal:0x00000002d75a08 @app=#&lt;Rack::Protection::XSSHeader:0x00000002d75af8 @app=#&lt;TimeTravelerAPI:0x00000002d15b80 @default_layout=:layout, @preferred_extension=nil, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00000002d15b30 @cache={}&gt;&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :frame_options=&gt;:sameorigin, :except=&gt;[:session_hijacking, :remote_token]}&gt;&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multiprocess</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multithread</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.cookie_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.cookie_string</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_hash</td>\n           <td class=\"code\"><div>{&quot;id&quot;=&gt;&quot;new_roomId&quot;, &quot;name&quot;=&gt;&quot;new_roomName&quot;, &quot;price&quot;=&gt;&quot;new_roomPrice&quot;, &quot;address&quot;=&gt;&quot;new_address&quot;, &quot;airbnb_link&quot;=&gt;&quot;new_airbnb_link&quot;, &quot;roomImg&quot;=&gt;&quot;new_roomImg&quot;, &quot;bed&quot;=&gt;&quot;new_bed&quot;, &quot;roomRank&quot;=&gt;&quot;new_roomRank&quot;}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x00000003473cb0&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_vars</td>\n           <td class=\"code\"><div>id=new_roomId&amp;name=new_roomName&amp;price=new_roomPrice&amp;address=new_address&amp;airbnb_link=new_airbnb_link&amp;roomImg=new_roomImg&amp;bed=new_bed&amp;roomRank=new_roomRank</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_string</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.run_once</td>\n           <td class=\"code\"><div>false</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.test</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.url_scheme</td>\n           <td class=\"code\"><div>http</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.version</td>\n           <td class=\"code\"><div>[1, 3]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.accept</td>\n           <td class=\"code\"><div>[#&lt;Sinatra::Request::AcceptEntry:0x0000000349b418 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.error</td>\n           <td class=\"code\"><div>#&lt;NameError: uninitialized constant TimeTravelerAPI::ErrorRepresenter&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.route</td>\n           <td class=\"code\"><div>POST &#x2F;api&#x2F;v0.1&#x2F;addHouse&#x2F;?</div></td>\n         </tr>\n         \n      </table>\n      <div class=\"clear\"></div>\n    </div> <!-- /RACK ENV -->\n\n    <p id=\"explanation\">You're seeing this error because you have\nenabled the <code>show_exceptions</code> setting.</p>\n  </div> <!-- /WRAP -->\n  </body>\n</html>\n"]>
